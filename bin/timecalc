#!/usr/bin/env python

"""Simple time span calculator.

I use it to calculate time spent on work, e.g.:

    $ timecalc 2:27 + 4:13
    06:40, 400 min.

LICENSE: public domain.
"""

import os
import re
import sys


def parse(value):
    m = re.search("^(\d{1,2}):(\d{2})$", value)
    if m is None:
        print >> sys.stderr, "Bad value: %s, must be HH:MM" % value
        exit(1)

    h = int(m.group(1))
    m = int(m.group(2))

    return h * 60 + m


def format(value):
    h = value / 60
    m = value - h * 60
    return "%02d:%02d" % (h, m)


def show_totals():
    fn = os.path.expanduser("~/.local/share/wiki/time")
    print "Displaying totals from", fn

    data = {}
    dates = []
    last_date = None

    for line in file(fn, "rb").read().split("\n"):
        if re.match("^\d{2}/\d{2}$", line):
            last_date = line
            dates.append(line)
            continue

        tmp = re.search("^  (\d{2}:\d{2})-(\d{2}:\d{2})", line)
        if tmp is not None and last_date is not None:
            beg = parse(tmp.group(1))
            end = parse(tmp.group(2))

            if end < beg:
                end += 1440
            dur = end - beg

            if last_date not in data:
                data[last_date] = 0
            data[last_date] += dur
            continue

    for date in reversed(dates):
        print date, format(data[date])


def run(args):
    if len(args) < 2:
        print "Usage: %s HH:MM [sign HH:MM]*" % args[0]
        return show_totals()

    total = 0
    sign = 1

    for value in args[1:]:
        if value == "-":
            sign = -1
        elif value == "+":
            sign = 1
        else:
            value = parse(value)
            total += value * sign

    print "%s, %u min." % (format(total), total)


if __name__ == "__main__":
    run(sys.argv)
